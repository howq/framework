<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ihowq.wordpress.api.dao.CommentDao">
    <resultMap id="BaseResultMap" type="com.ihowq.wordpress.api.model.pojo.comment.Comment">
        <id column="comment_ID" jdbcType="BIGINT" property="commentId"/>
        <result column="comment_post_ID" jdbcType="BIGINT" property="commentPostId"/>
        <result column="comment_author" jdbcType="VARCHAR" property="commentAuthor"/>
        <result column="comment_author_email" jdbcType="VARCHAR" property="commentAuthorEmail"/>
        <result column="comment_author_url" jdbcType="VARCHAR" property="commentAuthorUrl"/>
        <result column="comment_author_IP" jdbcType="VARCHAR" property="commentAuthorIp"/>
        <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate"/>
        <result column="comment_date_gmt" jdbcType="TIMESTAMP" property="commentDateGmt"/>
        <result column="comment_karma" jdbcType="INTEGER" property="commentKarma"/>
        <result column="comment_approved" jdbcType="VARCHAR" property="commentApproved"/>
        <result column="comment_agent" jdbcType="VARCHAR" property="commentAgent"/>
        <result column="comment_type" jdbcType="VARCHAR" property="commentType"/>
        <result column="comment_parent" jdbcType="BIGINT" property="commentParent"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.ihowq.wordpress.api.model.pojo.comment.Comment">
        <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent"/>
    </resultMap>
    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Query_Where_Clause">
        <where>
            <foreach collection="query.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        comment_ID, comment_post_ID, comment_author, comment_author_email, comment_author_url,
        comment_author_IP, comment_date, comment_date_gmt, comment_karma, comment_approved,
        comment_agent, comment_type, comment_parent, user_id
    </sql>
    <sql id="Blob_Column_List">
        comment_content
    </sql>
    <select id="selectByQueryWithBLOBs" parameterType="com.ihowq.wordpress.api.model.pojo.comment.CommentQuery"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from wp_comments
        <if test="_parameter != null">
            <include refid="Query_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByQuery" parameterType="com.ihowq.wordpress.api.model.pojo.comment.CommentQuery"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from wp_comments
        <if test="_parameter != null">
            <include refid="Query_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from wp_comments
        where comment_ID = #{commentId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wp_comments
    where comment_ID = #{commentId,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByQuery" parameterType="com.ihowq.wordpress.api.model.pojo.comment.CommentQuery">
        delete from wp_comments
        <if test="_parameter != null">
            <include refid="Query_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ihowq.wordpress.api.model.pojo.comment.Comment">
    insert into wp_comments (comment_ID, comment_post_ID, comment_author, 
      comment_author_email, comment_author_url, comment_author_IP, 
      comment_date, comment_date_gmt, comment_karma, 
      comment_approved, comment_agent, comment_type, 
      comment_parent, user_id, comment_content
      )
    values (#{commentId,jdbcType=BIGINT}, #{commentPostId,jdbcType=BIGINT}, #{commentAuthor,jdbcType=VARCHAR}, 
      #{commentAuthorEmail,jdbcType=VARCHAR}, #{commentAuthorUrl,jdbcType=VARCHAR}, #{commentAuthorIp,jdbcType=VARCHAR}, 
      #{commentDate,jdbcType=TIMESTAMP}, #{commentDateGmt,jdbcType=TIMESTAMP}, #{commentKarma,jdbcType=INTEGER}, 
      #{commentApproved,jdbcType=VARCHAR}, #{commentAgent,jdbcType=VARCHAR}, #{commentType,jdbcType=VARCHAR}, 
      #{commentParent,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{commentContent,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.ihowq.wordpress.api.model.pojo.comment.Comment">
        insert into wp_comments
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                comment_ID,
            </if>
            <if test="commentPostId != null">
                comment_post_ID,
            </if>
            <if test="commentAuthor != null">
                comment_author,
            </if>
            <if test="commentAuthorEmail != null">
                comment_author_email,
            </if>
            <if test="commentAuthorUrl != null">
                comment_author_url,
            </if>
            <if test="commentAuthorIp != null">
                comment_author_IP,
            </if>
            <if test="commentDate != null">
                comment_date,
            </if>
            <if test="commentDateGmt != null">
                comment_date_gmt,
            </if>
            <if test="commentKarma != null">
                comment_karma,
            </if>
            <if test="commentApproved != null">
                comment_approved,
            </if>
            <if test="commentAgent != null">
                comment_agent,
            </if>
            <if test="commentType != null">
                comment_type,
            </if>
            <if test="commentParent != null">
                comment_parent,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="commentContent != null">
                comment_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                #{commentId,jdbcType=BIGINT},
            </if>
            <if test="commentPostId != null">
                #{commentPostId,jdbcType=BIGINT},
            </if>
            <if test="commentAuthor != null">
                #{commentAuthor,jdbcType=VARCHAR},
            </if>
            <if test="commentAuthorEmail != null">
                #{commentAuthorEmail,jdbcType=VARCHAR},
            </if>
            <if test="commentAuthorUrl != null">
                #{commentAuthorUrl,jdbcType=VARCHAR},
            </if>
            <if test="commentAuthorIp != null">
                #{commentAuthorIp,jdbcType=VARCHAR},
            </if>
            <if test="commentDate != null">
                #{commentDate,jdbcType=TIMESTAMP},
            </if>
            <if test="commentDateGmt != null">
                #{commentDateGmt,jdbcType=TIMESTAMP},
            </if>
            <if test="commentKarma != null">
                #{commentKarma,jdbcType=INTEGER},
            </if>
            <if test="commentApproved != null">
                #{commentApproved,jdbcType=VARCHAR},
            </if>
            <if test="commentAgent != null">
                #{commentAgent,jdbcType=VARCHAR},
            </if>
            <if test="commentType != null">
                #{commentType,jdbcType=VARCHAR},
            </if>
            <if test="commentParent != null">
                #{commentParent,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="commentContent != null">
                #{commentContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByQuery" parameterType="com.ihowq.wordpress.api.model.pojo.comment.CommentQuery"
            resultType="java.lang.Long">
        select count(*) from wp_comments
        <if test="_parameter != null">
            <include refid="Query_Where_Clause"/>
        </if>
    </select>
    <update id="updateByQuerySelective" parameterType="map">
        update wp_comments
        <set>
            <if test="record.commentId != null">
                comment_ID = #{record.commentId,jdbcType=BIGINT},
            </if>
            <if test="record.commentPostId != null">
                comment_post_ID = #{record.commentPostId,jdbcType=BIGINT},
            </if>
            <if test="record.commentAuthor != null">
                comment_author = #{record.commentAuthor,jdbcType=VARCHAR},
            </if>
            <if test="record.commentAuthorEmail != null">
                comment_author_email = #{record.commentAuthorEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.commentAuthorUrl != null">
                comment_author_url = #{record.commentAuthorUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.commentAuthorIp != null">
                comment_author_IP = #{record.commentAuthorIp,jdbcType=VARCHAR},
            </if>
            <if test="record.commentDate != null">
                comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.commentDateGmt != null">
                comment_date_gmt = #{record.commentDateGmt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.commentKarma != null">
                comment_karma = #{record.commentKarma,jdbcType=INTEGER},
            </if>
            <if test="record.commentApproved != null">
                comment_approved = #{record.commentApproved,jdbcType=VARCHAR},
            </if>
            <if test="record.commentAgent != null">
                comment_agent = #{record.commentAgent,jdbcType=VARCHAR},
            </if>
            <if test="record.commentType != null">
                comment_type = #{record.commentType,jdbcType=VARCHAR},
            </if>
            <if test="record.commentParent != null">
                comment_parent = #{record.commentParent,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.commentContent != null">
                comment_content = #{record.commentContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause"/>
        </if>
    </update>
    <update id="updateByQueryWithBLOBs" parameterType="map">
        update wp_comments
        set comment_ID = #{record.commentId,jdbcType=BIGINT},
        comment_post_ID = #{record.commentPostId,jdbcType=BIGINT},
        comment_author = #{record.commentAuthor,jdbcType=VARCHAR},
        comment_author_email = #{record.commentAuthorEmail,jdbcType=VARCHAR},
        comment_author_url = #{record.commentAuthorUrl,jdbcType=VARCHAR},
        comment_author_IP = #{record.commentAuthorIp,jdbcType=VARCHAR},
        comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
        comment_date_gmt = #{record.commentDateGmt,jdbcType=TIMESTAMP},
        comment_karma = #{record.commentKarma,jdbcType=INTEGER},
        comment_approved = #{record.commentApproved,jdbcType=VARCHAR},
        comment_agent = #{record.commentAgent,jdbcType=VARCHAR},
        comment_type = #{record.commentType,jdbcType=VARCHAR},
        comment_parent = #{record.commentParent,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        comment_content = #{record.commentContent,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause"/>
        </if>
    </update>
    <update id="updateByQuery" parameterType="map">
        update wp_comments
        set comment_ID = #{record.commentId,jdbcType=BIGINT},
        comment_post_ID = #{record.commentPostId,jdbcType=BIGINT},
        comment_author = #{record.commentAuthor,jdbcType=VARCHAR},
        comment_author_email = #{record.commentAuthorEmail,jdbcType=VARCHAR},
        comment_author_url = #{record.commentAuthorUrl,jdbcType=VARCHAR},
        comment_author_IP = #{record.commentAuthorIp,jdbcType=VARCHAR},
        comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
        comment_date_gmt = #{record.commentDateGmt,jdbcType=TIMESTAMP},
        comment_karma = #{record.commentKarma,jdbcType=INTEGER},
        comment_approved = #{record.commentApproved,jdbcType=VARCHAR},
        comment_agent = #{record.commentAgent,jdbcType=VARCHAR},
        comment_type = #{record.commentType,jdbcType=VARCHAR},
        comment_parent = #{record.commentParent,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ihowq.wordpress.api.model.pojo.comment.Comment">
        update wp_comments
        <set>
            <if test="commentPostId != null">
                comment_post_ID = #{commentPostId,jdbcType=BIGINT},
            </if>
            <if test="commentAuthor != null">
                comment_author = #{commentAuthor,jdbcType=VARCHAR},
            </if>
            <if test="commentAuthorEmail != null">
                comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
            </if>
            <if test="commentAuthorUrl != null">
                comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
            </if>
            <if test="commentAuthorIp != null">
                comment_author_IP = #{commentAuthorIp,jdbcType=VARCHAR},
            </if>
            <if test="commentDate != null">
                comment_date = #{commentDate,jdbcType=TIMESTAMP},
            </if>
            <if test="commentDateGmt != null">
                comment_date_gmt = #{commentDateGmt,jdbcType=TIMESTAMP},
            </if>
            <if test="commentKarma != null">
                comment_karma = #{commentKarma,jdbcType=INTEGER},
            </if>
            <if test="commentApproved != null">
                comment_approved = #{commentApproved,jdbcType=VARCHAR},
            </if>
            <if test="commentAgent != null">
                comment_agent = #{commentAgent,jdbcType=VARCHAR},
            </if>
            <if test="commentType != null">
                comment_type = #{commentType,jdbcType=VARCHAR},
            </if>
            <if test="commentParent != null">
                comment_parent = #{commentParent,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="commentContent != null">
                comment_content = #{commentContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where comment_ID = #{commentId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ihowq.wordpress.api.model.pojo.comment.Comment">
    update wp_comments
    set comment_post_ID = #{commentPostId,jdbcType=BIGINT},
      comment_author = #{commentAuthor,jdbcType=VARCHAR},
      comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
      comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
      comment_author_IP = #{commentAuthorIp,jdbcType=VARCHAR},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_date_gmt = #{commentDateGmt,jdbcType=TIMESTAMP},
      comment_karma = #{commentKarma,jdbcType=INTEGER},
      comment_approved = #{commentApproved,jdbcType=VARCHAR},
      comment_agent = #{commentAgent,jdbcType=VARCHAR},
      comment_type = #{commentType,jdbcType=VARCHAR},
      comment_parent = #{commentParent,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where comment_ID = #{commentId,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.ihowq.wordpress.api.model.pojo.comment.Comment">
    update wp_comments
    set comment_post_ID = #{commentPostId,jdbcType=BIGINT},
      comment_author = #{commentAuthor,jdbcType=VARCHAR},
      comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
      comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
      comment_author_IP = #{commentAuthorIp,jdbcType=VARCHAR},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_date_gmt = #{commentDateGmt,jdbcType=TIMESTAMP},
      comment_karma = #{commentKarma,jdbcType=INTEGER},
      comment_approved = #{commentApproved,jdbcType=VARCHAR},
      comment_agent = #{commentAgent,jdbcType=VARCHAR},
      comment_type = #{commentType,jdbcType=VARCHAR},
      comment_parent = #{commentParent,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT}
    where comment_ID = #{commentId,jdbcType=BIGINT}
  </update>
</mapper>